{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "858f8ecc",
   "metadata": {},
   "source": [
    "# Markdown\n",
    " - 문서의 구조와 내용을 한번에 정의 \n",
    " - 코드를 설명하거나 노트북 파일에 이론적 배경 설명을 위해 사용\n",
    " - [마크다운 참고 사이트](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet)\n",
    "<div class=\"alert alert-block\" style=\"border: 1px solid #566573;background-color:#EAF2F8;\">\n",
    "<font size=\"3em\" style=\"font-weight:bold;color:#3f8dbf;\">html도 사용 할 수 있음</font><br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31729168",
   "metadata": {},
   "source": [
    "# 파이썬 기초"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b88277e",
   "metadata": {},
   "source": [
    "## 문자열"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c19aed27",
   "metadata": {},
   "source": [
    "   \n",
    "* \"Hello\" 문자열은 문자 각각 인덱스(주소)를 갖게 됩니다. \n",
    "* 따라서 인덱스를 이용하면 문자 하나하나 접근할 수 있고\n",
    "* 이는 곧 개별적으로 처리가 가능하다는 의미입니다. \n",
    "\n",
    "\n",
    "* **인덱싱**: 인덱스를 이용하여 문자하나에 접근  ```변수명[인덱스]```\n",
    "* **슬라이싱**: 인덱스 구간을 이용하여 문자열의 일부에 접근  ```변수명[시작_인덱스:끝_인덱스+1]```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96c40ea1",
   "metadata": {},
   "source": [
    "### 시작부터 이니셜을 읽기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fc8e2841",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'o'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=\"hello\"\n",
    "data[4]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f28b999",
   "metadata": {},
   "source": [
    "### 거꾸로 읽기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "4be70cd2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'o'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[-1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0dc4bb67",
   "metadata": {},
   "source": [
    "### 여러문자 가져오기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ab462421",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello'"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=\"hello python\"\n",
    "data[0:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "63743d43",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'python'"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=\"hello python\"\n",
    "data[6:12]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7103b01d",
   "metadata": {},
   "source": [
    "### 문자열 함수"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "847ee128",
   "metadata": {},
   "source": [
    "#### 문자열 길이 가져오기 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0683a751",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "18"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b5dc7ba7",
   "metadata": {},
   "source": [
    "#### 양쪽 공백 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "2a41bfe0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Hello python'"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = '  Hello python    '\n",
    "data.strip()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dfff1f17",
   "metadata": {},
   "source": [
    "#### 왼쪽 공백 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5911f4ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.lstrip()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bb7ff451",
   "metadata": {},
   "source": [
    "#### 오른쪽 공백 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eea73100",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.rstrip()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5974f918",
   "metadata": {},
   "source": [
    "#### 특수문자 * 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5b72142f",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = '****python----'\n",
    "data.strip(\"*\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aef2a372",
   "metadata": {},
   "source": [
    "#### 파일확장자 있는지 찾기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "ce22cf77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-1"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#gif 확장자는 있나?  = 없는 경우 \"\"-1\"을 반환함\n",
    "img='2021-12-15 img2111.jpg'\n",
    "img.find(\".gif\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8c62cd1",
   "metadata": {},
   "source": [
    "#### 파일확장자 문자열의 몇번째 있는지 찾기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1800a19c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "18"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "img='2021-12-15 img2111.jpg'\n",
    "img.find(\".jpg\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37b0f351",
   "metadata": {},
   "source": [
    "#### 파일 이름속에 문자'-'은 몇개 있나?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8425a93d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "img='2021-12-15 img2111.jpg'\n",
    "img.count(\"-\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41c18ec8",
   "metadata": {},
   "source": [
    "#### 파일 형식 변경"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "dbdc4724",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2021/12/15 img2111.jpg'"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "img='2021-12-15 img2111.jpg'\n",
    "img.replace('-','/')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7607aac",
   "metadata": {},
   "source": [
    "#### 단어 분리_split (리스트로 분리가 됨)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e44e276f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['2021-12-15 img2111', 'jpg']"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "img='2021-12-15 img2111.jpg'\n",
    "img.split(\".\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d091597",
   "metadata": {},
   "source": [
    "#### 문자마다 콤마삽입"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "96248f31",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'p,y,t,h,o,n'"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data='python'\n",
    "\",\".join(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d07d0c44",
   "metadata": {},
   "source": [
    "#### 문자마다 공백삽입"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "187da5bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'p y t h o n'"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data='python'\n",
    "\" \".join(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "788cc2b3",
   "metadata": {},
   "source": [
    "## 리스트 (자료형 데이터 구조)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b84e92d8",
   "metadata": {},
   "source": [
    "### 리스트 생성"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ea8a5b03",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = [] \n",
    "data =list() #리스트화 시키기\n",
    "data "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c85147a1",
   "metadata": {},
   "source": [
    "### 리스트 요소 읽기(찾기)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e762d67",
   "metadata": {},
   "source": [
    "#### 인덱싱"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "dd7efc83",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['P', 'Y', 'T', 'H', 'O', 'N']"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = [\"P\",\"Y\",\"T\",\"H\",\"O\",\"N\"]\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "f093d3a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'T'"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "10e71e8e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'N'"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1f304987",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'P'"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2a65b90",
   "metadata": {},
   "source": [
    "#### 슬라이싱"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0769f084",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = [\"P\",\"Y\",\"T\",\"H\",\"O\",\"N\"]\n",
    "data[1:4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "81f27d13",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['P', 'Y', 'T', 'H']"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = [\"P\",\"Y\",\"T\",\"H\",\"O\",\"N\"]\n",
    "data[0:4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "ddb563a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['P', 'Y', 'T', 'H']"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = [\"P\",\"Y\",\"T\",\"H\",\"O\",\"N\"]\n",
    "data[:4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "9ef89806",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['H', 'O', 'N']"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = [\"P\",\"Y\",\"T\",\"H\",\"O\",\"N\"]\n",
    "data[3:]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0979fcf4",
   "metadata": {},
   "source": [
    "### 리스트 요소 수정"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b1b56b3",
   "metadata": {},
   "source": [
    "#### 요소 추가하기: append()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "7abdb297",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 5]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "location = [1,2,3]\n",
    "location.append(5)\n",
    "location"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf665962",
   "metadata": {},
   "source": [
    "#### 특정위치에 요소 추가하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "42fb9ba8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 7, 2, 3, 5]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#insert(위치,요소) \n",
    "location.insert(1,7)\n",
    "location"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "48d74869",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 100, 2, 3, 5]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 인덱스로 직접 추가하기\n",
    "location[1]=100\n",
    "location"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d0888c3",
   "metadata": {},
   "source": [
    "### 리스트의 요소 삭제"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6eb6d9a",
   "metadata": {},
   "source": [
    "#### 인덱스로 요소 삭제하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e8ae0c17",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 3]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "location = [1,2,3]\n",
    "del location[1]\n",
    "location"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f95b99c5",
   "metadata": {},
   "source": [
    "#### 요소 값으로 삭제하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "7c1e72c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[5, 4, 3, 3, 2, 3]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "location = [5,4,3,2,3,2,3]\n",
    "location.remove(2)\n",
    "location"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b31f1ce6",
   "metadata": {},
   "source": [
    "#### 모두 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6eceed7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "location.clear()\n",
    "location"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a381c476",
   "metadata": {},
   "source": [
    "### 리스트 활용"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67c2645a",
   "metadata": {},
   "source": [
    "#### 리스트 요소의 타입보기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "c64e2e74",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bb48c588",
   "metadata": {},
   "source": [
    "#### 리스트 정렬:sort(), reverse()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "abe9777e",
   "metadata": {},
   "outputs": [],
   "source": [
    "location = [2,1,5,4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "e1a12001",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 4, 5]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#오름차순\n",
    "location.sort()\n",
    "location"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "8ad9e71f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[5, 4, 2, 1]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#내림차순\n",
    "location.reverse()\n",
    "location"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "a99a0b06",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = [\"P\",\"Y\",\"T\",\"H\",\"O\",\"N\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "fee655e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['H', 'N', 'O', 'P', 'T', 'Y']"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 오름차순\n",
    "data.sort()\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "15cc0cd1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Y', 'T', 'P', 'O', 'N', 'H']"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " #내림차순\n",
    "data.reverse()\n",
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e377e232",
   "metadata": {},
   "source": [
    "### 리스트 내 리스트"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "8df7cc08",
   "metadata": {},
   "outputs": [],
   "source": [
    "just2data = [['남','여'],['오른쪽','왼쪽'],['위','아래']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "09c2685d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'오른쪽'"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 오늘쪽을 출력하려면....\n",
    "just2data[1][0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "ac458cfe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'오른쪽'"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=just2data[1]\n",
    "data[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77790d9d",
   "metadata": {},
   "source": [
    "## 기초 스킬"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e8243d07",
   "metadata": {},
   "source": [
    "### Type 보기 ()\n",
    "* 정수: int\n",
    "* 부동소숫점: float\n",
    "* 문자열: str\n",
    "* Boolean: bool"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03e7cbd3",
   "metadata": {},
   "source": [
    "### 자료형 변환: type casting\n",
    "* float to int: int(3.6)\n",
    "* int to float: float(4)\n",
    "* int to str: str(3)\n",
    "* str to int: int('12')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c7cb354",
   "metadata": {},
   "source": [
    "### print"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "451792e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "123 안녕 True\n"
     ]
    }
   ],
   "source": [
    "print(123,\"안녕\",True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ab3a20d",
   "metadata": {},
   "source": [
    "### 변수"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "71f54ea2",
   "metadata": {},
   "source": [
    "- 변수란?\n",
    "    - 무엇을 담는 공간 혹은 영역입니다. \n",
    "    - 여기서 **`무엇`**은 **`데이터`**이고, **`공간 혹은 영역`**은 **`메모리`**를 말합니다. \n",
    "    - 즉, 프로그램에서 어떠한 데이터를 다루고 싶다면 꼭 변수를 사용해야 합니다. \n",
    "    \n",
    "\n",
    "- 자료형이란?\n",
    "    * 사람이 다루는 데이터는 다양한 형태이지만 파이썬의 변수는 몇 개의 유형으로 형태가 미리 정해져있습니다. \n",
    "    * 이러한 변수의 유형을 **자료형**이라고 합니다. \n",
    "    * 숫자 자료형은 모든 숫자를 표현할 수 있고,\n",
    "    * 문자 자료형은 모든 문자열을 표현할 수 있고,\n",
    "    * 리스트와 딕셔너리 자료형은 여러 문자열과 숫자를 혼합하여 표현할 수 있다.\n",
    "    \n",
    "    \n",
    "- 변수 사용법\n",
    "\n",
    "    - 변수는 '변할 수 있는 자료'로 프로그램에서 필요할 때 쓰기위해서 저장해 놓는 식별자이다.\n",
    "    - 변수이름은 문자열로 된 것. 숫자로 시작x, 키워드X (예. name, str_data) (안되는 예. 1abc, print)\n",
    "    - 모든 자료형 값을 다 저장할 수 있다.\n",
    "    - 사용방법: 변수명 = 값"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ae8b6c49",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "유경선\n"
     ]
    }
   ],
   "source": [
    "name=\"유경선\"\n",
    "print(name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "65ddde11",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "36\n"
     ]
    }
   ],
   "source": [
    "age=36\n",
    "print(age)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84d85183",
   "metadata": {},
   "source": [
    "* **변수 첫 글씨자는 숫자가 안됨**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b35dde59",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (Temp/ipykernel_20452/2193549367.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"C:\\Users\\10001572\\AppData\\Local\\Temp/ipykernel_20452/2193549367.py\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    2name='aaaaaa' #변수 첫글\u001b[0m\n\u001b[1;37m     ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "1name='aaaaaa'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa272aaf",
   "metadata": {},
   "source": [
    "* **키워드는 변수로 사용 할 수 없음**\n",
    "![파이썬 키워드](https://makemeanalyst.com/wp-content/uploads/2017/06/keywords-python.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "a7cbe77b",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (Temp/ipykernel_20452/943162916.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"C:\\Users\\10001572\\AppData\\Local\\Temp/ipykernel_20452/943162916.py\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    return=\"이름\"\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "return=\"이름\"\n",
    "print(return)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a6ddd5b",
   "metadata": {},
   "source": [
    "### 숫자 자료형(계산)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "091fc447",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 4\n",
      "7\n",
      "-1\n",
      "12\n",
      "0.75\n"
     ]
    }
   ],
   "source": [
    "data=3\n",
    "data2=4\n",
    "print(data,data2)\n",
    "print(data+data2)\n",
    "print(data-data2)\n",
    "print(data*data2)\n",
    "print(data/data2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b87fa41f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "원의 둘레 : 62.830000000000005\n",
      "원의 넓이 : 314.15000000000003\n"
     ]
    }
   ],
   "source": [
    "r = 10\n",
    "pi= 3.1415\n",
    "print(\"원의 둘레 :\",(2*pi*r))\n",
    "print(\"원의 넓이 :\",pi*(r**2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2710b8d0",
   "metadata": {},
   "source": [
    "### 논리 자료형 Boolean (True/False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ddda129b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "False\n",
      "False\n",
      "True\n",
      "False\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "print(3<7)\n",
    "print(3>7)\n",
    "print(3>=7)\n",
    "print(3<=7)\n",
    "print(3==7)\n",
    "print(3!=7)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4446c874",
   "metadata": {},
   "source": [
    "### 조건문"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2bad64d",
   "metadata": {},
   "source": [
    "* if 구문 사용\n",
    "* 조건이 True일때, 명령이 실행됩니다.\n",
    "* if 구문이 적용되는 범위는 인덴트의 유무에 따라 결정되니 인덴트 주의!!\n",
    "\n",
    "```python\n",
    "if 조건:\n",
    "    실행문\n",
    "\n",
    "if 조건 and 조건:\n",
    "    실행문\n",
    "\n",
    "if 조건 or 조건:\n",
    "    실행문\n",
    "\n",
    "if not 조건:\n",
    "    실행문\n",
    "```\n",
    "* 비교 연산자\n",
    "\n",
    "    ```python\n",
    "    x == n  같다\n",
    "    x != n  다르다\n",
    "\n",
    "    x<n     오른쪽이 더 크다\n",
    "    x>n     왼쪽이 더 크다\n",
    "    x<=n    오른쪽이 크거나 같다.\n",
    "    x>=n    왼쪽이 크거나 같다.\n",
    "\n",
    "    ```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "084ecb41",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "성인입니다\n"
     ]
    }
   ],
   "source": [
    "age = 25\n",
    "age_digit = int(age)\n",
    "\n",
    "if age_digit>19:\n",
    "    print(\"성인입니다\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d535dd0",
   "metadata": {},
   "source": [
    "* if, elif,  else 활용\n",
    "```python\n",
    "if 조건:\n",
    "    실행문\n",
    "elif 조건:\n",
    "    실행문\n",
    "else:\n",
    "    실행문\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "662d6c2c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "현금 얼마?10000\n",
      "집에 갈껀가요?no\n",
      "백반집이라도 갑시다\n"
     ]
    }
   ],
   "source": [
    "cash = int(input(\"현금 얼마?\"))\n",
    "if cash >= 100000:\n",
    "    print(\"레스토랑 가자!!\")\n",
    "else:\n",
    "    gohome = input(\"집에 갈껀가요?\")\n",
    "    if gohome == 'yes':\n",
    "        print(\"집에 갑시다.\")\n",
    "    elif gohome == 'no':\n",
    "        print(\"백반집이라도 갑시다\")\n",
    "    else:\n",
    "        print(\"뭐라고 대답하는지 모르겠소\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8ad51787",
   "metadata": {},
   "source": [
    "### 반복문\n",
    "* 사용방법\n",
    "\n",
    "```python\n",
    "for 변수 in [리스트]:\n",
    "    실행문1\n",
    "    \n",
    "for 변수 in range(반복횟수):\n",
    "    실행문1\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "ff81d4ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "서울시\n",
      "경기도\n",
      "인천시\n",
      "부산시\n",
      "대전시\n"
     ]
    }
   ],
   "source": [
    "for i in ['서울시','경기도','인천시','부산시','대전시']:\n",
    "    print(i)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c32773d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n"
     ]
    }
   ],
   "source": [
    "for i in range(10):\n",
    "    print(i)    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "2c6df237",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "3\n",
      "6\n",
      "10\n",
      "15\n",
      "21\n",
      "28\n",
      "36\n",
      "45\n",
      "55\n"
     ]
    }
   ],
   "source": [
    "sum = 0 \n",
    "for i in range(11): \n",
    "    sum=sum+i\n",
    "    print(sum)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fdf83003",
   "metadata": {},
   "source": [
    "* **반복문에 인덱스도 붙일 수 있음**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "38163b28",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 . 서울시\n",
      "1 . 경기도\n",
      "2 . 인천시\n",
      "3 . 부산시\n",
      "4 . 대전시\n"
     ]
    }
   ],
   "source": [
    "loc =  ['서울시','경기도','인천시','부산시','대전시']\n",
    "\n",
    "for index in range(len(loc)):\n",
    "    print(index,\".\",loc[index])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "318d422d",
   "metadata": {},
   "source": [
    "* **enumerate사용하여 번호 붙이기**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "edc30759",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.서울시\n",
      "1.경기도\n",
      "2.인천시\n",
      "3.부산시\n",
      "4.대전시\n"
     ]
    }
   ],
   "source": [
    "for index,value in enumerate(loc):\n",
    "    #print(index,value)\n",
    "    print(\"{}.{}\".format(index,value))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4b45c21",
   "metadata": {},
   "source": [
    "### 파이썬 오브젝트 파일로 저장하기\n",
    "* Pickle 패키지를 이용"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "9e856bde",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "\n",
    "my_list = ['a','b','c']\n",
    "\n",
    "with open(\"data.pickle\",\"wb\") as fw:\n",
    "    pickle.dump(my_list,fw)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "747faa5d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['a', 'b', 'c']\n"
     ]
    }
   ],
   "source": [
    "import pickle\n",
    "\n",
    "with open(\"data.pickle\",\"rb\") as fr:\n",
    "    data = pickle.load(fr)\n",
    "    print(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "814ac5cd",
   "metadata": {},
   "source": [
    "### Shallow copy와 Deep copy\n",
    "* Shallow copy : 새로운 복합 객체를 만들고,(가능한 범위까지) 원본 객체를 가리키는 참조를 새로운 복합 객체에 삽입합니다.\n",
    "* Deep copy : 새로운 복합 객체를 만들고,재귀적으로 원본 객체의 사본을 새로 만든 복합 객체에 삽입합니다.\n",
    "* 참고 할 점 : 얕은 복사와 깊은 복사의 차이점은 복합 객체(리스트 또는 클래스 인스턴스들과 같은 다른 객체를 포함한 객체)에만 유효합니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "7f7223b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import copy\n",
    "\n",
    "ori = [1,2]\n",
    "a = [ori, 3]\n",
    "b = copy.copy(a)\n",
    "c = copy.deepcopy(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "3fa0c8a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[1, 2], 3]"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "865208c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[1, 2], 3]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f26a5b99",
   "metadata": {},
   "source": [
    "Case2 : immutable 객체안에 mutable객체가 포함되어 있을 시\n",
    "Shallow copy : =(Assignment) 처럼 동작합니다.\n",
    "\n",
    "Deep copy : 복사대상 뿐만 아니라 대상안에 있는 요소들도 새로운 공간에 할당됩니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "950386f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "ori = [1,2]\n",
    "a = (ori, 3)\n",
    "b = copy.copy(a)\n",
    "c = copy.deepcopy(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "e0606620",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([1, 2], 3)"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "8f2f0c70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([1, 2], 3)"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37b21045",
   "metadata": {},
   "source": [
    "Case3 : immutable 객체안에 immutable객체가 포함되어 있을 시\n",
    "Shallow copy, Deep copy 동일하게 =(Assignment) 처럼 동작합니다.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "e48ed04d",
   "metadata": {},
   "outputs": [],
   "source": [
    "ori = (1,2)\n",
    "a = (ori, 3)\n",
    "b = copy.copy(a)\n",
    "c = copy.deepcopy(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "f0f29cea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((1, 2), 3)"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4e04ada",
   "metadata": {},
   "source": [
    "Case4 : mutable 객체안에 immutable객체가 포함되어 있을 시\n",
    "Shallow copy, Shallow copy 복사대상은 새로운 공간에 할당되지만 대상안에 있는 요소는 원본과 동일 대상을 참조합니다"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "a27c0dbb",
   "metadata": {},
   "outputs": [],
   "source": [
    "ori = (1,2)\n",
    "a = [ori, 3]\n",
    "b = copy.copy(a)\n",
    "c = copy.deepcopy(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "aa98d95a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(1, 2), 3]"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "31f98f56",
   "metadata": {},
   "outputs": [],
   "source": [
    "import copy\n",
    "\n",
    "class MyClass:\n",
    "    def __init__(self):\n",
    "        self.listValue = [1,2]\n",
    "        self.tupleValue = (1,2)\n",
    "\n",
    "a = MyClass()\n",
    "b = copy.copy(a)\n",
    "c = copy.deepcopy(a)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b061e67",
   "metadata": {},
   "source": [
    "Shallow copy\n",
    "class안에 있는 mutable객체인 listValue는 원본과 동일 대상을 참조합니다.\n",
    "\n",
    "Deep copy\n",
    "class안에 있는 mutable객체인 listValue의 대한 새로운 사본을 만듭니다.\n",
    "---------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b4c2585",
   "metadata": {},
   "source": [
    "**요약**\n",
    "\n",
    "1 deep copy target이 mutable 일 경우\n",
    "- target : 원본과 같은 참조\n",
    "- target의 포함된 객체 중 mutable 객체는 새로운 사본을 생성\n",
    "- target의 포함된 객체 중 immutable 객체는 원본과 같은 참조\n",
    "\n",
    "2 deep copy target이 immutable 일 경우\n",
    "- target의 포함된 객체 중 mutable 객체가 있으면 target은 새로운 사본을 생성\n",
    "- target의 포함된 객체 중 mutable객체가 없다면 target은 원본과 같은 참조\n",
    "\n",
    "3 shallow copy target이 mutable 일 경우\n",
    "- target : 새로운 사본을 생성\n",
    "- target의 포함된 객체 : 원본과 같은 참조\n",
    "\n",
    "4 shallow copy target이 immutable 일 경우\n",
    "- target : 원본과 같은 참조\n",
    "- target의 포함된 객체 : 원본과 같은 참조\n",
    "\n",
    "5 immutable로만 구성된 객체일 경우\n",
    "- 수정 불가하므로 새로운 공간을 만들지 않는 것으로 예상하며, =(Assignment)와 같게 동작합니다.\n",
    "- deep, shallow copy 동일 함.\n",
    "\n",
    "6 사용자 class 같은 개념으로 적용됨.\n",
    "\n",
    "---------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e83c8e6f",
   "metadata": {},
   "source": [
    "## 라이브러리(모듈)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "519ba9b0",
   "metadata": {},
   "source": [
    "### 라이브러리(모듈) 설치 리스트 또는 정보 "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d188dfe5",
   "metadata": {},
   "source": [
    "* 설치 리스트 출력"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "cb2bc287",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Package                            Version"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution -yrsistent (c:\\programdata\\anaconda3\\lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution -yrsistent (c:\\programdata\\anaconda3\\lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution -yrsistent (c:\\programdata\\anaconda3\\lib\\site-packages)\n",
      "WARNING: Ignoring invalid distribution -yrsistent (c:\\programdata\\anaconda3\\lib\\site-packages)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "---------------------------------- --------------------\n",
      "absl-py                            1.2.0\n",
      "aiohttp                            3.8.1\n",
      "aiosignal                          1.2.0\n",
      "alabaster                          0.7.12\n",
      "altgraph                           0.17\n",
      "anaconda-client                    1.9.0\n",
      "anaconda-navigator                 2.1.1\n",
      "anaconda-project                   0.10.1\n",
      "anyio                              2.2.0\n",
      "appdirs                            1.4.4\n",
      "argh                               0.26.2\n",
      "argon2-cffi                        20.1.0\n",
      "arrow                              0.13.1\n",
      "asn1crypto                         1.4.0\n",
      "astroid                            2.6.6\n",
      "astropy                            4.3.1\n",
      "astunparse                         1.6.3\n",
      "async-generator                    1.10\n",
      "async-timeout                      4.0.2\n",
      "atomicwrites                       1.4.0\n",
      "attrs                              21.2.0\n",
      "autopep8                           1.5.7\n",
      "Babel                              2.9.1\n",
      "backcall                           0.2.0\n",
      "backports.functools-lru-cache      1.6.4\n",
      "backports.shutil-get-terminal-size 1.0.0\n",
      "backports.tempfile                 1.0\n",
      "backports.weakref                  1.0.post1\n",
      "base58                             2.1.1\n",
      "bcrypt                             3.2.0\n",
      "beautifulsoup4                     4.10.0\n",
      "binaryornot                        0.4.4\n",
      "bitarray                           2.3.0\n",
      "bkcharts                           0.2\n",
      "black                              19.10b0\n",
      "bleach                             4.0.0\n",
      "bokeh                              2.4.1\n",
      "boto                               2.49.0\n",
      "Bottleneck                         1.3.2\n",
      "branca                             0.4.2\n",
      "brotlipy                           0.7.0\n",
      "cached-property                    1.5.2\n",
      "cachetools                         5.2.0\n",
      "certifi                            2021.10.8\n",
      "cffi                               1.14.6\n",
      "chardet                            4.0.0\n",
      "charset-normalizer                 2.0.4\n",
      "chart-studio                       1.1.0\n",
      "click                              8.0.3\n",
      "cloudpickle                        2.0.0\n",
      "clyent                             1.2.2\n",
      "ColabTurtlePlus                    2.0.1\n",
      "colorama                           0.4.4\n",
      "colorlover                         0.3.0\n",
      "comtypes                           1.1.10\n",
      "conda                              4.10.3\n",
      "conda-build                        3.21.6\n",
      "conda-content-trust                0+unknown\n",
      "conda-pack                         0.6.0\n",
      "conda-package-handling             1.7.3\n",
      "conda-repo-cli                     1.0.4\n",
      "conda-token                        0.3.0\n",
      "conda-verify                       3.4.2\n",
      "contextlib2                        0.6.0.post1\n",
      "cookiecutter                       1.7.2\n",
      "cryptography                       3.4.8\n",
      "cufflinks                          0.17.3\n",
      "cx-Oracle                          8.2.1\n",
      "cycler                             0.10.0\n",
      "Cython                             0.29.24\n",
      "cytoolz                            0.11.0\n",
      "daal4py                            2021.3.0\n",
      "dask                               2021.10.0\n",
      "debugpy                            1.4.1\n",
      "decorator                          5.1.0\n",
      "defusedxml                         0.7.1\n",
      "diff-match-patch                   20200713\n",
      "distlib                            0.3.6\n",
      "distributed                        2021.10.0\n",
      "docutils                           0.17.1\n",
      "entrypoints                        0.3\n",
      "et-xmlfile                         1.1.0\n",
      "eth-abi                            2.2.0\n",
      "eth-account                        0.5.8\n",
      "eth-hash                           0.5.0\n",
      "eth-keyfile                        0.5.1\n",
      "eth-keys                           0.3.4\n",
      "eth-rlp                            0.2.1\n",
      "eth-typing                         2.3.0\n",
      "eth-utils                          1.9.5\n",
      "fastcache                          1.1.0\n",
      "filelock                           3.8.0\n",
      "flake8                             3.9.2\n",
      "Flask                              1.1.2\n",
      "flatbuffers                        22.9.24\n",
      "folium                             0.12.1.post1\n",
      "fonttools                          4.25.0\n",
      "frozenlist                         1.3.0\n",
      "fsspec                             2021.10.1\n",
      "future                             0.18.2\n",
      "gast                               0.4.0\n",
      "gevent                             21.8.0\n",
      "glob2                              0.7\n",
      "google-auth                        2.12.0\n",
      "google-auth-oauthlib               0.4.6\n",
      "google-pasta                       0.2.0\n",
      "graphviz                           0.20.1\n",
      "greenlet                           1.1.1\n",
      "grpcio                             1.49.1\n",
      "h11                                0.12.0\n",
      "h5py                               3.2.1\n",
      "HeapDict                           1.0.1\n",
      "hexbytes                           0.2.2\n",
      "html5lib                           1.1\n",
      "idna                               3.2\n",
      "imagecodecs                        2021.8.26\n",
      "imageio                            2.9.0\n",
      "imagesize                          1.2.0\n",
      "importlib-metadata                 4.8.1\n",
      "inflection                         0.5.1\n",
      "iniconfig                          1.1.1\n",
      "intervaltree                       3.1.0\n",
      "ipfshttpclient                     0.8.0a2\n",
      "ipykernel                          6.4.1\n",
      "ipython                            7.29.0\n",
      "ipython-genutils                   0.2.0\n",
      "ipywidgets                         7.6.5\n",
      "isort                              5.9.3\n",
      "itsdangerous                       2.0.1\n",
      "jdcal                              1.4.1\n",
      "jedi                               0.18.0\n",
      "Jinja2                             2.11.3\n",
      "jinja2-time                        0.2.0\n",
      "joblib                             1.1.0\n",
      "json5                              0.9.6\n",
      "jsonschema                         3.2.0\n",
      "jupyter                            1.0.0\n",
      "jupyter-client                     6.1.12\n",
      "jupyter-console                    6.4.0\n",
      "jupyter-contrib-core               0.3.3\n",
      "jupyter-contrib-nbextensions       0.5.1\n",
      "jupyter-core                       4.8.1\n",
      "jupyter-highlight-selected-word    0.2.0\n",
      "jupyter-latex-envs                 1.4.6\n",
      "jupyter-nbextensions-configurator  0.4.1\n",
      "jupyter-server                     1.4.1\n",
      "jupyterlab                         3.2.1\n",
      "jupyterlab-pygments                0.1.2\n",
      "jupyterlab-server                  2.8.2\n",
      "jupyterlab-widgets                 1.0.0\n",
      "keras                              2.10.0\n",
      "Keras-Preprocessing                1.1.2\n",
      "keyring                            23.1.0\n",
      "kiwisolver                         1.3.1\n",
      "lazy-object-proxy                  1.6.0\n",
      "libarchive-c                       2.9\n",
      "libclang                           14.0.6\n",
      "llvmlite                           0.37.0\n",
      "locket                             0.2.1\n",
      "lru-dict                           1.1.8\n",
      "lxml                               4.6.3\n",
      "macholib                           1.14\n",
      "Markdown                           3.4.1\n",
      "MarkupSafe                         1.1.1\n",
      "matplotlib                         3.4.3\n",
      "matplotlib-inline                  0.1.2\n",
      "mccabe                             0.6.1\n",
      "menuinst                           1.4.18\n",
      "mistune                            0.8.4\n",
      "mkl-fft                            1.3.1\n",
      "mkl-random                         1.2.2\n",
      "mkl-service                        2.4.0\n",
      "mock                               4.0.3\n",
      "more-itertools                     8.10.0\n",
      "mpmath                             1.2.1\n",
      "msgpack                            1.0.2\n",
      "multiaddr                          0.0.9\n",
      "multidict                          6.0.2\n",
      "multipledispatch                   0.6.0\n",
      "munkres                            1.1.4\n",
      "mypy-extensions                    0.4.3\n",
      "navigator-updater                  0.2.1\n",
      "nbclassic                          0.2.6\n",
      "nbclient                           0.5.3\n",
      "nbconvert                          6.1.0\n",
      "nbformat                           5.1.3\n",
      "nest-asyncio                       1.5.1\n",
      "netaddr                            0.8.0\n",
      "networkx                           2.6.3\n",
      "nltk                               3.6.5\n",
      "nose                               1.3.7\n",
      "notebook                           6.4.5\n",
      "numba                              0.54.1\n",
      "numexpr                            2.7.3\n",
      "numpy                              1.20.3\n",
      "numpydoc                           1.1.0\n",
      "oauthlib                           3.2.1\n",
      "olefile                            0.46\n",
      "openpyxl                           3.0.9\n",
      "opt-einsum                         3.3.0\n",
      "outcome                            1.1.0\n",
      "packaging                          21.0\n",
      "pandas                             1.3.4\n",
      "pandocfilters                      1.4.3\n",
      "paramiko                           2.7.2\n",
      "parsimonious                       0.8.1\n",
      "parso                              0.8.2\n",
      "partd                              1.2.0\n",
      "path                               16.0.0\n",
      "pathlib2                           2.3.6\n",
      "pathspec                           0.7.0\n",
      "patsy                              0.5.2\n",
      "pefile                             2022.5.30\n",
      "pep8                               1.7.1\n",
      "pexpect                            4.8.0\n",
      "pickleshare                        0.7.5\n",
      "Pillow                             8.4.0\n",
      "pip                                21.2.4\n",
      "pkginfo                            1.7.1\n",
      "platformdirs                       2.5.2\n",
      "plotly                             5.5.0\n",
      "pluggy                             0.13.1\n",
      "ply                                3.11\n",
      "poyo                               0.5.0\n",
      "prometheus-client                  0.11.0\n",
      "prompt-toolkit                     3.0.20\n",
      "protobuf                           3.19.6\n",
      "psutil                             5.8.0\n",
      "ptyprocess                         0.7.0\n",
      "py                                 1.10.0\n",
      "pyasn1                             0.4.8\n",
      "pyasn1-modules                     0.2.8\n",
      "pycodestyle                        2.7.0\n",
      "pycosat                            0.6.3\n",
      "pycparser                          2.20\n",
      "pycryptodome                       3.10.1\n",
      "pycurl                             7.44.1\n",
      "pydocstyle                         6.1.1\n",
      "pyerfa                             2.0.0\n",
      "pyflakes                           2.3.1\n",
      "Pygments                           2.10.0\n",
      "pyinstaller                        5.4.1\n",
      "pyinstaller-hooks-contrib          2022.10\n",
      "PyJWT                              2.1.0\n",
      "pylint                             2.9.6\n",
      "pyls-spyder                        0.4.0\n",
      "PyMySQL                            1.0.2\n",
      "PyNaCl                             1.4.0\n",
      "pyodbc                             4.0.0-unsupported\n",
      "pyOpenSSL                          21.0.0\n",
      "pyparsing                          3.0.4\n",
      "pyreadline                         2.1\n",
      "pyrsistent                         0.18.1\n",
      "PySocks                            1.7.1\n",
      "pytest                             6.2.4\n",
      "python-dateutil                    2.8.2\n",
      "python-lsp-black                   1.0.0\n",
      "python-lsp-jsonrpc                 1.0.0\n",
      "python-lsp-server                  1.2.4\n",
      "python-slugify                     5.0.2\n",
      "pytz                               2021.3\n",
      "PyWavelets                         1.1.1\n",
      "pywin32                            228\n",
      "pywin32-ctypes                     0.2.0\n",
      "pywinpty                           0.5.7\n",
      "PyYAML                             6.0\n",
      "pyzmq                              22.2.1\n",
      "QDarkStyle                         3.0.2\n",
      "qstylizer                          0.1.10\n",
      "QtAwesome                          1.0.2\n",
      "qtconsole                          5.1.1\n",
      "QtPy                               1.10.0\n",
      "regex                              2021.8.3\n",
      "requests                           2.26.0\n",
      "requests-oauthlib                  1.3.1\n",
      "retrying                           1.3.3\n",
      "rlp                                2.0.1\n",
      "rope                               0.19.0\n",
      "rsa                                4.9\n",
      "Rtree                              0.9.7\n",
      "ruamel-yaml-conda                  0.15.100\n",
      "scikit-image                       0.18.3\n",
      "scikit-learn                       0.24.2\n",
      "scikit-learn-intelex               2021.20210714.120553\n",
      "scipy                              1.7.1\n",
      "seaborn                            0.11.2\n",
      "selenium                           4.1.0\n",
      "Send2Trash                         1.8.0\n",
      "setuptools                         65.4.1\n",
      "simplegeneric                      0.8.1\n",
      "singledispatch                     3.7.0\n",
      "sip                                4.19.13\n",
      "six                                1.16.0\n",
      "sklearn                            0.0\n",
      "sniffio                            1.2.0\n",
      "snowballstemmer                    2.1.0\n",
      "sortedcollections                  2.1.0\n",
      "sortedcontainers                   2.4.0\n",
      "soupsieve                          2.2.1\n",
      "Sphinx                             4.2.0\n",
      "sphinxcontrib-applehelp            1.0.2\n",
      "sphinxcontrib-devhelp              1.0.2\n",
      "sphinxcontrib-htmlhelp             2.0.0\n",
      "sphinxcontrib-jsmath               1.0.1\n",
      "sphinxcontrib-qthelp               1.0.3\n",
      "sphinxcontrib-serializinghtml      1.1.5\n",
      "sphinxcontrib-websupport           1.2.4\n",
      "spyder                             5.1.5\n",
      "spyder-kernels                     2.1.3\n",
      "SQLAlchemy                         1.4.22\n",
      "statsmodels                        0.12.2\n",
      "sympy                              1.9\n",
      "tables                             3.6.1\n",
      "TBB                                0.2\n",
      "tblib                              1.7.0\n",
      "tenacity                           8.0.1\n",
      "tensorboard                        2.10.1\n",
      "tensorboard-data-server            0.6.1\n",
      "tensorboard-plugin-wit             1.8.1\n",
      "tensorflow                         2.10.0\n",
      "tensorflow-estimator               2.10.0\n",
      "tensorflow-io-gcs-filesystem       0.27.0\n",
      "termcolor                          2.0.1\n",
      "terminado                          0.9.4\n",
      "testpath                           0.5.0\n",
      "text-unidecode                     1.3\n",
      "textdistance                       4.2.1\n",
      "threadpoolctl                      2.2.0\n",
      "three-merge                        0.1.1\n",
      "tifffile                           2021.7.2\n",
      "tinycss                            0.4\n",
      "tk                                 0.1.0\n",
      "toml                               0.10.2\n",
      "toolz                              0.11.1\n",
      "torch                              1.12.1\n",
      "tornado                            6.1\n",
      "tqdm                               4.62.3\n",
      "traitlets                          5.1.0\n",
      "trio                               0.19.0\n",
      "trio-websocket                     0.9.2\n",
      "typed-ast                          1.4.3\n",
      "typing-extensions                  3.10.0.2\n",
      "ujson                              4.0.2\n",
      "unicodecsv                         0.14.1\n",
      "Unidecode                          1.2.0\n",
      "urllib3                            1.26.7\n",
      "varint                             1.0.2\n",
      "virtualenv                         20.16.5\n",
      "watchdog                           2.1.3\n",
      "wcwidth                            0.2.5\n",
      "web3                               5.30.0\n",
      "webencodings                       0.5.1\n",
      "websockets                         9.1\n",
      "Werkzeug                           2.0.2\n",
      "wheel                              0.37.0\n",
      "whichcraft                         0.6.1\n",
      "widgetsnbextension                 3.5.1\n",
      "win-inet-pton                      1.1.0\n",
      "win-unicode-console                0.5\n",
      "wincertstore                       0.2\n",
      "wordcloud                          1.8.1\n",
      "wrapt                              1.12.1\n",
      "wsproto                            1.0.0\n",
      "xlrd                               2.0.1\n",
      "XlsxWriter                         3.0.1\n",
      "xlwings                            0.24.9\n",
      "xlwt                               1.3.0\n",
      "xmltodict                          0.12.0\n",
      "yapf                               0.31.0\n",
      "yarl                               1.7.2\n",
      "zict                               2.0.0\n",
      "zipp                               3.6.0\n",
      "zope.event                         4.5.0\n",
      "zope.interface                     5.4.0\n"
     ]
    }
   ],
   "source": [
    "!pip list"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d6ba718",
   "metadata": {},
   "source": [
    "* 특정 모듈이 설치 되었는지 확인 : !pip shot ********"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "7bd0ae28",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Name: beautifulsoup4\n",
      "Version: 4.10.0\n",
      "Summary: Screen-scraping library\n",
      "Home-page: http://www.crummy.com/software/BeautifulSoup/bs4/\n",
      "Author: Leonard Richardson\n",
      "Author-email: leonardr@segfault.org\n",
      "License: MIT\n",
      "Location: c:\\programdata\\anaconda3\\lib\\site-packages\n",
      "Requires: soupsieve\n",
      "Required-by: conda-build\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: Ignoring invalid distribution -yrsistent (c:\\programdata\\anaconda3\\lib\\site-packages)\n"
     ]
    }
   ],
   "source": [
    "!pip show beautifulsoup4\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4b088b4",
   "metadata": {},
   "source": [
    "### 라이브러리 설치, 삭제\n",
    "\n",
    "* 쥬피터 노트북에서 직접 설치 가능('i'자를 넣음)\n",
    "    * ipip install -upgrade 모듈이름\n",
    "    \n",
    "* (윈도우)명령프롬프트>마우스오른쪽>관리자 권한으로 실행\n",
    "    * pip install -upgrade 모듈이름\n",
    "    \n",
    "* (맥) 터미널\n",
    "    * pip install -upgrade 모듈이름\n",
    "    \n",
    "#--upgrade: 설치되어 있더라도 업그레이드가 필요하면 업그레이드 해죠\n",
    "\n",
    "\n",
    "* 라이브러리 삭제\n",
    "    * pip uninstall 모듈이름"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6d1d9ab",
   "metadata": {},
   "source": [
    "### 라이브러리 찾기\n",
    "\n",
    "* 라이브러리에는 해당 라이브러리의 사용방법을 소개하는 문서가 존재한다.\n",
    "* Get started or Quick start 처럼 간략하게 소개하는 카테고리를 살펴본다.\n",
    "* 대부분 구글링을 통해 사용법을 카피하고.\n",
    "* 카피한 사용법에서 응용하고 싶을 때, 라이브러리 문서를 참고한다."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "174f0bc2",
   "metadata": {},
   "source": [
    "## 함수"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b252c49e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import math\n",
    "import pandas as pd \n",
    "import numpy as np \n",
    "import shutil\n",
    "import re\n",
    "import time\n",
    "import paramiko\n",
    "import os\n",
    "import cx_Oracle\n",
    "import ast\n",
    "import requests\n",
    "from openpyxl import load_workbook\n",
    "import openpyxl\n",
    "import urllib.request\n",
    "from selenium import webdriver\n",
    "from bs4 import BeautifulSoup\n",
    "from tkinter import *\n",
    "from tkinter import ttk\n",
    "from tkinter.messagebox import *\n",
    "import tkinter.font as tkFont\n",
    "from openpyxl import Workbook\n",
    "from openpyxl.drawing.image import Image\n",
    "from datetime import datetime"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4dddc78",
   "metadata": {},
   "source": [
    "### math "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "062ed619",
   "metadata": {},
   "outputs": [],
   "source": [
    "import math "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "c96ce850",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "27\n"
     ]
    }
   ],
   "source": [
    "num = pow(3, 3)\n",
    "print(num)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ff8c7ef9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import math as m #math 를 m으로 설정 후 사용 하겠다\n",
    "num = m.pow(3,3)\n",
    "num"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2ff28ad",
   "metadata": {},
   "source": [
    "### random (choice)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "0e474fc4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Eric\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "students = ['Tom', 'Sally', 'Betty', 'Eric', 'Angela', 'Stephany'] \n",
    "print(random.choice(students))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "f43b952c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_int = random.randint(0, 10)\n",
    "my_int"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e81c413e",
   "metadata": {},
   "source": [
    "**Random 패키지를 이용한 슬롯머신 프로그램 만들기 실습**\n",
    "\n",
    "\n",
    "직장인 최모씨는 카지노에 방문했습니다. 그는 슬롯머신에 빠져 들었는데요.  \n",
    "슬롯머신은 아래와 같이 작동합니다.  \n",
    "\n",
    "\n",
    "한번 하는데 1000원 입니다.\n",
    "\n",
    "- 30% 확률로 3500원을 돌려 줍니다.\n",
    "- 60% 확률로 꽝입니다. - 5000\n",
    "- 10% 확률로 8000원을 돌려 줍니다.\n",
    "- y를 입력하고 엔터를 누르면 베팅합니다.\n",
    "- n을 입력하고 엔터를 누르면 남은 돈을 가지고 집으로 갑니다.\n",
    "\n",
    "\n",
    "최모씨가 파산 할때까지 즐길 수 있는 슬롯머신 프로그램을 만들어 봅시다.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "5c5ebabd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "y\n",
      "Lucky number is 84\n",
      "꽝!, balance : 4000\n"
     ]
    }
   ],
   "source": [
    "from random import randint\n",
    "\n",
    "balance = 10000\n",
    "my_balance = 10000\n",
    "\n",
    "while balance > 5000 :\n",
    "    \n",
    "    choice = input()\n",
    "    \n",
    "    if choice == \"n\":\n",
    "        print(f\"Leave casino with {balance}.\")\n",
    "        break\n",
    "    \n",
    "    elif choice == \"y\":\n",
    "        pass\n",
    "    \n",
    "    else:\n",
    "        print(\"wrong input.\")\n",
    "        continue\n",
    "        \n",
    "    balance -= 1000\n",
    "    \n",
    "    i = randint(0, 100)\n",
    "    \n",
    "    print(f\"Lucky number is {i}\")\n",
    "    \n",
    "    if i < 30:\n",
    "        balance += 3500\n",
    "        print(f\"I got 3,500!, balance : {balance}\")\n",
    "        \n",
    "    elif i >= 30 and i < 90:\n",
    "        balance -= 5000\n",
    "        print(f\"꽝!, balance : {balance}\")\n",
    "        continue\n",
    "    \n",
    "    elif i >= 90:\n",
    "        balance += 8000\n",
    "        print(f\"I got 8,000!, balance : {balance}\")\n",
    "\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd99d365",
   "metadata": {},
   "source": [
    "### csv"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29730bc1",
   "metadata": {},
   "source": [
    "* **.csv File 읽기**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "503a2845",
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    " \n",
    "f = open('data.csv', 'r', encoding='utf-8')\n",
    "rdr = csv.reader(f)\n",
    "\n",
    "for line in rdr:\n",
    "    print(line)\n",
    "\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3b13695d",
   "metadata": {},
   "source": [
    "**.csv File 저장하기**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aacd5d96",
   "metadata": {},
   "source": [
    "1) 구분자를 콤마(,) 대신 \\t로 사용하여 저장하기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de0bc9b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv    \n",
    "\n",
    "f = open('output_tab.csv', 'w', encoding='utf-8', newline='')\n",
    "wr = csv.writer(f, delimiter=\"\\t\")\n",
    "wr.writerow([1, \"1교시\", '함수란?'])\n",
    "wr.writerow([2, \"2교시\", 'numpy 사용해 보기!'])\n",
    "wr.writerow([3, \"3교시\",  'pandas 사용해 보기!!'])\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2ad69e7",
   "metadata": {},
   "source": [
    "저장했을때 탭(\\t)으로 구분하여 저장했다면 읽을 때에도 delimter를 명시하여 준다. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf0711e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv\n",
    " \n",
    "f = open('output_tab.csv', 'r', encoding='utf-8')\n",
    "rdr = csv.reader(f, delimiter=\"\\t\")\n",
    "for line in rdr:\n",
    "    print(line)\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "83f8c91b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aff6c230",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "69014c52",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c775709f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f32e2b37",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6a31df01",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bf690950",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "90178209",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "d08369f1",
   "metadata": {},
   "source": [
    "## JSON"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a58884da",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import pprint # JSON 출력 이쁘게\n",
    "\n",
    "# 네이버에서 받은 아이디와 패스워드 할당\n",
    "client_id = 'yUDaLxSRzZJqACkLu7bk'\n",
    "client_secret = 'NEiTvhZOHr'\n",
    "\n",
    "#네이버 쇼핑 api\n",
    "naver_open_api = 'https://openapi.naver.com/v1/search/shop.json'\n",
    "\n",
    "#검색어\n",
    "query = '갤럭시 s21'\n",
    "\n",
    "#요청 변수\n",
    "params = {'query':query}\n",
    "\n",
    "# 패턴 코드\n",
    "# HTTP 규약이 있고, 그 중 Header 영역에 네이버 id/pwd 정보를 추가하여 URL 요청\n",
    "header_params = {\"X-Naver-Client-Id\":client_id, \"X-Naver-Client-Secret\":client_secret}\n",
    "\n",
    "# 상품검색 URL을 네이버에 요청하고 응답받음\n",
    "res = requests.get(naver_open_api, headers=header_params, params=params,verify=False)\n",
    "\n",
    "# 요청한 URL 확인\n",
    "print(res.url)\n",
    "\n",
    "if res.status_code != 200:\n",
    "    print (\"Error Code:\", res.status_code)       \n",
    "else:\n",
    "    \n",
    "    # 검색 결과\n",
    "    data = res.json()\n",
    "\n",
    "    # 결과 출력\n",
    "    pprint.pprint(data)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "905aa1cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['items'][0]['title']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8c6521f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "print(data['items'][0], '\\n')\n",
    "print(data['items'][0]['link'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e8c452f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "for index,item in enumerate(data['items']):\n",
    "    print(item['title'].replace('<b>',''))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c5de26d",
   "metadata": {},
   "source": [
    "### 예외상황 처리"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "e210153d",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_20452/2242141240.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[0mflist\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[1;34m'img1.png'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'img2.png'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;34m'img3.png'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0mflist\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m3\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;31m#4번째 요소가 없음\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "flist = ['img1.png','img2.png','img3.png']\n",
    "flist[3] #4번째 요소가 없음"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "6854de63",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "인덱스에러임\n"
     ]
    }
   ],
   "source": [
    "flist = ['img1.png','img2.png','img3.png']\n",
    "\n",
    "try:\n",
    "    print(flist[3])\n",
    "except:\n",
    "    print(\"인덱스에러임\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "9054e3f0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "list index out of range\n"
     ]
    }
   ],
   "source": [
    "flist = ['img1.png','img2.png','img3.png']\n",
    "\n",
    "try:\n",
    "    print(flist[3])\n",
    "except IndexError as erindex:\n",
    "    print(erindex)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b4c4ed55",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "4fec8008",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "344.2px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
